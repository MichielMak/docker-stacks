services:
  radarr:
    image: linuxserver/radarr:5.28.0@sha256:c984533510abe0219a70e80d15bd0d212b7df21baa0913759c4ce6cc9092240b
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Amsterdam
      - DOCKER_MODS=ghcr.io/tailscale-dev/docker-mod:main # Tailscale integration
      - TAILSCALE_STATE_DIR=/var/lib/tailscale # Tailscale state directory
      - TAILSCALE_SERVE_PORT=7878 # Port for Tailscale to serve Radarr
      - TAILSCALE_SERVE_MODE=https # Use HTTPS for Tailscale serving
      - TAILSCALE_AUTHKEY=${TAILSCALE_AUTHKEY}  # Tailscale auth key
      - TAILSCALE_HOSTNAME=radarr # Hostname for Tailscale
      - TAILSCALE_USE_SSH=0 # Disable SSH for Tailscale
    volumes:
      - ${DOCKER_DATA_DIR}/radarr/config:/config
      - ${MEDIA_DIR}:/media
      - ${DOCKER_DATA_DIR}/radarr/tailscale:/var/lib/tailscale
    #    ports:
    #      - 7878:7878
    labels:
      - homepage.group=Media Management
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=http://radarr.${DOMAIN}/
      - homepage.description=Movies management
      - homepage.widget.type=radarr
      - homepage.widget.fields=["wanted", "queued", "movies"]
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API}
      - traefik.enable=true
      - traefik.docker.network=npm
      - traefik.http.routers.radarr-api.rule=Host(`radarr.${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.radarr-api.entrypoints=websecure
      - traefik.http.routers.radarr-api.priority=100
      - traefik.http.routers.radarr-api.tls=true
      - traefik.http.routers.radarr-api.service=radarr
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.priority=99
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.middlewares=authentik-forwardauth@docker
      - traefik.http.routers.radarr.service=radarr
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    restart: unless-stopped
    networks:
      - npm
  radarrexternal:
    image: linuxserver/radarr:5.28.0@sha256:c984533510abe0219a70e80d15bd0d212b7df21baa0913759c4ce6cc9092240b
    container_name: radarrexternal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${DOCKER_DATA_DIR}/radarrrexternal/config:/config
      - ${MEDIA_DIR}:/media
    #    ports:
    #      - 7878
    labels:
      - homepage.group=Media Management
      - homepage.name=Radarr external
      - homepage.icon=radarr.png
      - homepage.href=http://radarrexternal.${DOMAIN}/
      - homepage.description=Movies management
      - homepage.widget.type=radarr
      - homepage.widget.fields=["wanted", "queued", "movies"]
      - homepage.widget.url=http://radarrexternal:7878
      - homepage.widget.key=${RADARREXTERNAL_API}
      - tsdproxy.enable=true
      - tsdproxy.container_port=7878
      - traefik.enable=true
      - traefik.docker.network=npm
      - traefik.http.routers.radarrexternal-api.rule=Host(`radarrexternal.${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.radarrexternal-api.entrypoints=websecure
      - traefik.http.routers.radarrexternal-api.priority=100
      - traefik.http.routers.radarrexternal-api.tls=true
      - traefik.http.routers.radarrexternal-api.service=radarrexternal
      - traefik.http.routers.radarrexternal.rule=Host(`radarrexternal.${DOMAIN}`)
      - traefik.http.routers.radarrexternal.entrypoints=websecure
      - traefik.http.routers.radarrexternal.priority=99
      - traefik.http.routers.radarrexternal.tls=true
      - traefik.http.routers.radarrexternal.middlewares=authentik-forwardauth@docker
      - traefik.http.routers.radarrexternal.service=radarrexternal
      - traefik.http.services.radarrexternal.loadbalancer.server.port=7878
    restart: unless-stopped
    networks:
      - npm
networks:
  npm:
    external: true
