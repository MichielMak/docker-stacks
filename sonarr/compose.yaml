services:
  sonarr:
    image: linuxserver/sonarr:4.0.15@sha256:fbe67c25693dc5f3de220c5691f374576ae265df782c16918cc071b630490bd7
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Amsterdam
      - DOCKER_MODS=ghcr.io/tailscale-dev/docker-mod:main # Tailscale integration
      - TAILSCALE_STATE_DIR=/var/lib/tailscale  # Tailscale state directory
      - TAILSCALE_SERVE_PORT=8989   # Port for Tailscale to serve Sonarr
      - TAILSCALE_SERVE_MODE=https  # Use HTTPS for Tailscale serving
      - TAILSCALE_AUTHKEY=${TAILSCALE_AUTHKEY}  # Tailscale auth key
      - TAILSCALE_HOSTNAME=sonarr # Hostname for Tailscale
      - TAILSCALE_USE_SSH=0 # Disable SSH for Tailscale
    volumes:
      - ${DOCKER_DATA_DIR}/sonarr/config:/config
      - ${MEDIA_DIR}:/media 
      - ${DOCKER_DATA_DIR}/sonarr/tailscale:/var/lib/tailscale
    #    ports:
    #      - 8989:8989
    labels:
      - homepage.group=Media Management
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=http://sonarr.${DOMAIN}/
      - homepage.description=Series management
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API}
      - traefik.enable=true
      - traefik.docker.network=npm
      - traefik.http.routers.sonarr-api.rule=Host(`sonarr.${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.sonarr-api.entrypoints=websecure
      - traefik.http.routers.sonarr-api.priority=100
      - traefik.http.routers.sonarr-api.tls=true
      - traefik.http.routers.sonarr-api.service=sonarr
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.priority=99
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.middlewares=authentik-forwardauth@docker
      - traefik.http.routers.sonarr.service=sonarr
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    restart: unless-stopped
    networks:
      - npm
  sonarrexternal:
    image: linuxserver/sonarr:4.0.15@sha256:fbe67c25693dc5f3de220c5691f374576ae265df782c16918cc071b630490bd7
    container_name: sonarrexternal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/Amsterdam
    volumes:
      - ${DOCKER_DATA_DIR}/sonarrexternal/config:/config
      - ${MEDIA_DIR}:/media #optional
    #    ports:
    #      - 8989:8989
    labels:
      - homepage.group=Media Management
      - homepage.name=Sonarr external
      - homepage.icon=sonarr.png
      - homepage.href=http://sonarrexternal.${DOMAIN}/
      - homepage.description=Series management
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarrexternal:8989
      - homepage.widget.key=${SONARREXTERNAL_API}
      - traefik.enable=true
      - traefik.docker.network=npm
      - traefik.http.routers.sonarrexternal-api.rule=Host(`sonarrexternal.${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.sonarrexternal-api.entrypoints=websecure
      - traefik.http.routers.sonarrexternal-api.priority=100
      - traefik.http.routers.sonarrexternal-api.tls=true
      - traefik.http.routers.sonarrexternal-api.service=sonarrexternal
      - traefik.http.routers.sonarrexternal.rule=Host(`sonarrexternal.${DOMAIN}`)
      - traefik.http.routers.sonarrexternal.entrypoints=websecure
      - traefik.http.routers.sonarrexternal.priority=99
      - traefik.http.routers.sonarrexternal.tls=true
      - traefik.http.routers.sonarrexternal.middlewares=authentik-forwardauth@docker
      - traefik.http.routers.sonarrexternal.service=sonarrexternal
      - traefik.http.services.sonarrexternal.loadbalancer.server.port=8989
    restart: unless-stopped
    networks:
      - npm
networks:
  npm:
    external: true