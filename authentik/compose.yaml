services:
  postgresql:
    image: docker.io/library/postgres:16.10-alpine@sha256:af04f2185358fe933bb3f7fe2c42f0408b1bab4367c6d1b971bac3935636c21b
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${DOCKER_DATA_DIR}/authentik/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PG_PASS:?database password required}
      - POSTGRES_USER=${PG_USER:-authentik}
      - POSTGRES_DB=${PG_DB:-authentik}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_BOOTSTRAP_PASSWORD=${AUTHENTIK_BOOTSTRAP_PASSWORD}
      - AUTHENTIK_API=${AUTHENTIK_API}
  redis:
    image: docker.io/library/redis:8.2-alpine@sha256:987c376c727652f99625c7d205a1cba3cb2c53b92b0b62aade2bd48ee1593232
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - redis-cli ping | grep PONG
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${DOCKER_DATA_DIR}/authentik/redis:/data
  server:
    image: ghcr.io/goauthentik/server:2025.8.1@sha256:13aa5e2ad3990061602b8792b1d1ba751cf60225d368066f31ab7496cdc18e78
    restart: unless-stopped
    command: server
    volumes:
      - ${DOCKER_DATA_DIR}/authentik/media:/media
      - ${DOCKER_DATA_DIR}/authentik/custom-templates:/templates
    environment:
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_BOOTSTRAP_PASSWORD=${AUTHENTIK_BOOTSTRAP_PASSWORD}
      - AUTHENTIK_API=${AUTHENTIK_API}
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS}
    ports:
      - ${COMPOSE_PORT_HTTP:-9000}:9000
      - ${COMPOSE_PORT_HTTPS:-9443}:9443
    depends_on:
      - postgresql
      - redis
    labels:
      - homepage.group=Infra
      - homepage.name=Authentik
      - homepage.icon=authentik.png
      - homepage.href=http://auth.${DOMAIN}/
      - homepage.description=IAM
      - homepage.widget.type=authentik
      - homepage.widget.url={AUTHENTIK_INTERNAL_URL}
      - homepage.widget.key=${AUTHENTIK_API}
  worker:
    image: ghcr.io/goauthentik/server:2025.8.1@sha256:13aa5e2ad3990061602b8792b1d1ba751cf60225d368066f31ab7496cdc18e78
    restart: unless-stopped
    command: worker
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_DATA_DIR}/authentik/media:/media
      - ${DOCKER_DATA_DIR}/authentik/certs:/certs
      - ${DOCKER_DATA_DIR}/authentik/custom-templates:/templates
    environment:
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING__ENABLED}
      - AUTHENTIK_BOOTSTRAP_PASSWORD=${AUTHENTIK_BOOTSTRAP_PASSWORD}
      - AUTHENTIK_API=${AUTHENTIK_API}
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=${PG_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${PG_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${PG_PASS}
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  database:
    driver: local
  redis:
    driver: local