{
  "extends": [
    "config:recommended",
    ":dependencyDashboard",
    "docker:pinDigests",
    ":semanticCommits",
    ":timezone(Europe/Amsterdam)"
  ],
  "hostRules": [
    {
      "matchHost": "index.docker.io",
      "hostType": "docker"
    },
    {
      "matchHost": "ghcr.io",
      "hostType": "docker"
    },
    {
      "matchHost": "lscr.io",
      "hostType": "docker"
    }
  ],
  "prHourlyLimit": 5,
  "prConcurrentLimit": 10,
  "labels": [
    "renovate",
    "deps"
  ],
  "platformAutomerge": true,
  "rebaseWhen": "conflicted",
  "rangeStrategy": "pin",
  "separateMajorMinor": true,
  "commitBodyTable": true,
  "pruneStaleBranches": true,
  "schedule": [
    "at any time"
  ],
  "packageRules": [
    {
      "matchCategories": [
        "docker"
      ],
      "platform": "linux/amd64"
    },
    {
      "description": "Resolve all GHCR images via GHCR",
      "matchDatasources": [
        "docker"
      ],
      "registryUrls": [
        "https://ghcr.io"
      ],
      "matchPackageNames": [
        "/^ghcr\\.io\\//"
      ]
    },
    {
      "description": "Run GHCR checks overnight to avoid rate limits",
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "/^ghcr\\.io\\//"
      ],
      "schedule": [
        "after 01:00 and before 06:00"
      ]
    },
    {
      "description": "Open PRs immediately for all Docker updates",
      "matchDatasources": [
        "docker"
      ],
      "prCreation": "immediate"
    },
    {
      "description": "Ignore Docker prereleases globally",
      "matchDatasources": [
        "docker"
      ],
      "ignoreUnstable": true
    },
    {
      "description": "Delay Docker tags to avoid accidental pre-releases",
      "matchDatasources": [
        "docker"
      ],
      "minimumReleaseAge": "12 hours"
    },
    {
      "description": "Generic CalVer (YYYY.M.P) for clearly CalVer-tagged Docker images",
      "matchDatasources": [
        "docker"
      ],
      "versioning": "regex:^v?(?<major>\\d{4})\\.(?<minor>\\d{1,2})\\.(?<patch>\\d+)$",
      "matchCurrentVersion": "/^v?\\d{4}\\.\\d{1,2}\\.\\d+$/"
    },
    {
      "description": "Auto-merge low-risk updates (patch/digest) for common homelab images",
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "patch",
        "digest"
      ],
      "automerge": true,
      "automergeType": "pr",
      "matchPackageNames": [
        "/^lscr\\.io/linuxserver/.*/",
        "/^ghcr\\.io/linuxserver/.*/",
        "/^ollama\\/ollama$/",
        "/^docker\\.io\\/ollama\\/ollama$/",
        "/^ghcr\\.io\\/ollama\\/ollama$/",
        "/^postgres$/",
        "/^library/postgres$/",
        "/^docker\\.io/library/postgres$/"
      ]
    },
    {
      "description": "Never auto-merge majors",
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "automerge": false
    },
    {
      "description": "Raise priority for patch updates",
      "matchUpdateTypes": [
        "patch"
      ],
      "prPriority": 10
    },
    {
      "description": "Group updates strictly per compose file directory",
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "**/compose.yaml",
        "**/docker-compose.yaml"
      ],
      "groupName": "stack: {{parentDir}}",
      "groupSlug": "stack-{{parentDir}}",
      "separateMinorPatch": true,
      "addLabels": [
        "stack:{{parentDir}}"
      ]
    },
    {
      "description": "Auto-merge digest-only updates with a PR (one per stack dir)",
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "digest"
      ],
      "prCreation": "immediate",
      "automerge": true,
      "automergeType": "pr",
      "matchManagers": [
        "docker-compose"
      ],
      "groupName": "stack: {{parentDir}}",
      "groupSlug": "stack-{{parentDir}}",
      "addLabels": [
        "stack:{{parentDir}}"
      ]
    },
    {
      "description": "Label PRs with the stack folder name",
      "matchFileNames": [
        "**/compose.yaml",
        "**/docker-compose.yaml"
      ],
      "addLabels": [
        "stack:{{parentDir}}"
      ]
    },
    {
      "description": "Keep Postgres at 16.x for authentik",
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "**/authentik/**/compose.yaml",
        "**/authentik/**/docker-compose.yaml"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "/^postgres$/",
        "/^library\\/postgres$/",
        "/^docker\\.io\\/library\\/postgres$/"
      ],
      "allowedVersions": "<17"
    },
    {
      "description": "Exclude Postgres for Immich (custom image tag not supported)",
      "matchManagers": [
        "docker-compose"
      ],
      "matchFileNames": [
        "**/immich/**/compose.yaml",
        "**/immich/**/docker-compose.yaml"
      ],
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "/^ghcr\\.io\\/immich-app\\/postgres$/"
      ],
      "enabled": false
    }
  ]
}
